name: Master CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-lint:
    name: Build & Lint
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    concurrency: ci-${{ github.ref }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Build & Lint
        run: |
          npm ci --force
          npm run lint

  docker:
    name: Publish Docker Image
    needs: [ build-lint ]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/master'

    outputs:
        digest: ${{ steps.docker_build.outputs.digest }}

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/switcher-management:latest

  update-kustomize:
    name: Deploy
    needs: [ docker ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kustomize
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ARGOCD_PAT }}
          repository: switcherapi/switcher-deployment
          ref: master

      - name: Set up arkade-get
        uses: alexellis/arkade-get@master
        with:
          kubectl: latest
          kustomize: latest

      - name: Update GitOps repository
        run: |
          cd switcher-management/base
          echo RELEASE_TIME=`date` > environment-properties.env
          kustomize edit set image trackerforce/switcher-management:latest=trackerforce/switcher-management@${{ needs.docker.outputs.digest }}
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git add .
          git commit -m "[argocd] switcher-management: ${{ needs.docker.outputs.digest }}"
          git push